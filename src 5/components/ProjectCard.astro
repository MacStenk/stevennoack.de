---
/**
 * Project Card Component
 * @description Single project card for Projects Grid
 */

interface Props {
  title: string;
  description: string;
  tags: string[];
  status: 'live' | 'development' | 'planning';
  url?: string;
}

const { title, description, tags, status, url } = Astro.props;

const statusColors = {
  live: 'var(--matrix-green)',
  development: 'var(--cyber-orange)',
  planning: 'var(--neon-blue)'
};

const statusLabels = {
  live: 'LIVE',
  development: 'IN DEVELOPMENT',
  planning: 'PLANNING'
};
---

<article class="project-card">
  <div class="card-header">
    <h3 class="project-title">{title}</h3>
    <span class="status-badge" data-status={status}>
      {statusLabels[status]}
    </span>
  </div>
  
  <p class="project-description">{description}</p>
  
  <div class="project-tags">
    {tags.map(tag => (
      <span class="tag">{tag}</span>
    ))}
  </div>
  
  {url && (
    <a href={url} class="project-link" target="_blank" rel="noopener">
      <span>View Project</span>
      <span class="arrow">â†’</span>
    </a>
  )}
</article>

<style>
  .project-card {
    background: rgba(0, 0, 0, 0.7);
    border: 1px solid var(--matrix-green);
    border-radius: 8px;
    padding: 2rem;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }
  
  .project-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(
      90deg,
      var(--matrix-green) 0%,
      transparent 100%
    );
  }
  
  .project-card:hover {
    transform: translateY(-5px);
    border-color: var(--neon-green);
    box-shadow: 0 10px 30px rgba(0, 255, 65, 0.2);
  }
  
  .card-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1rem;
    gap: 1rem;
  }
  
  .project-title {
    font-size: 1.5rem;
    color: var(--matrix-green);
    margin: 0;
    font-family: var(--font-mono);
    flex: 1;
  }
  
  .status-badge {
    font-size: 0.7rem;
    padding: 0.25rem 0.75rem;
    border-radius: 4px;
    font-family: var(--font-mono);
    font-weight: 700;
    letter-spacing: 1px;
    white-space: nowrap;
    border: 1px solid;
  }
  
  .status-badge[data-status="live"] {
    color: var(--matrix-green);
    border-color: var(--matrix-green);
    background: rgba(0, 255, 65, 0.1);
  }
  
  .status-badge[data-status="development"] {
    color: var(--cyber-orange);
    border-color: var(--cyber-orange);
    background: rgba(255, 136, 0, 0.1);
  }
  
  .status-badge[data-status="planning"] {
    color: var(--neon-blue);
    border-color: var(--neon-blue);
    background: rgba(0, 191, 255, 0.1);
  }
  
  .project-description {
    color: var(--matrix-glow);
    line-height: 1.6;
    margin-bottom: 1.5rem;
  }
  
  .project-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
  }
  
  .tag {
    font-size: 0.85rem;
    padding: 0.25rem 0.75rem;
    background: rgba(0, 255, 65, 0.1);
    border: 1px solid var(--matrix-green);
    border-radius: 4px;
    color: var(--matrix-green);
    font-family: var(--font-mono);
  }
  
  .project-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--matrix-green);
    text-decoration: none;
    font-family: var(--font-mono);
    font-weight: 600;
    transition: all 0.3s ease;
    padding: 0.5rem 0;
  }
  
  .project-link:hover {
    color: var(--neon-green);
    gap: 1rem;
  }
  
  .arrow {
    font-size: 1.2rem;
    transition: transform 0.3s ease;
  }
  
  .project-link:hover .arrow {
    transform: translateX(5px);
  }
  
  @media (max-width: 768px) {
    .project-card {
      padding: 1.5rem;
    }
    
    .card-header {
      flex-direction: column;
      align-items: flex-start;
    }
    
    .project-title {
      font-size: 1.25rem;
    }
  }
</style>
